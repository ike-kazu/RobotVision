# -*- coding: utf-8 -*-
"""
Created on Thu Dec  8 10:44:37 2022

@author: E
"""

#ライブラリのインポート
import cv2
import numpy as np
import random
import time

files = []
files_2 = []
files_3 = []
files_t = []
z = 0
clearframe = 0
frameRate = 0
second = 10
is_clear = False
length = 0
hp = 100
gameover = False
interval = 0

def createOutline(img_sample, img_origin):
    # TODO: 消去
    #img_sample = cv2.resize(img_sample, dsize = (640, 480))
    #img_sample = cv2.bitwise_not(img_sample)
    img_gray = cv2.cvtColor(img_sample, cv2.COLOR_BGR2GRAY)
    cv2.imshow("createOutput_debug_1", img_gray)
    ret, img_binary = cv2.threshold(img_gray, 1, 255,cv2.THRESH_BINARY)
    contours, hierarchy = cv2.findContours(img_binary, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
    img_with_outline = cv2.drawContours(img_origin, contours, -1, (0, 255, 0), 5)
    return img_with_outline

def createrandom():
    return random.randrange(len(files) - 1)


# 画像にテキストをつける関数
def putText(img, text, x, y):
    cv2.putText(
            img,
            text,
            (x, y),
            cv2.FONT_HERSHEY_PLAIN,
            3,
            (0, 255, 0),
            2,
        )
    
    
def framecount(f):
    return f + 1

#1枚
img1 = cv2.imread('./data/pose/pose1.png')
img1 = cv2.bitwise_not(img1)
gray = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)


for n in range(1, 12):
    img = cv2.imread("./data/pose_resized/poseR"+str(n)+".png")
    img = cv2.bitwise_not(img)
    files_2.append(img)
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    alfa = cv2.cvtColor(gray, cv2.COLOR_GRAY2BGRA)
    files_3.append(alfa)
    #cv2.imshow("createOutput_debug_1", gray)
    ret, change = cv2.threshold(gray, 1, 255,cv2.THRESH_BINARY)
    # TODO: 消去
    #change2 = cv2.resize(change, dsize = (640, 480))
    files.append(change)


cap = cv2.VideoCapture(0)
screenshot = False
photo = None
#cv2.imshow("debug_a",gray)
createrandom()
'''
img2 = cv2.threshold(img1, 100, 255, cv2.THRESH_BINARY)

'''   

#cv2.imshow("sample", img2)
img2 = files[z]
cv2.imshow("img2debug",img2)
img3 = files_2[z]
y = np.sum(img2) / 255


#無限ループで差分をとる
while True:    
    ret,frame = cap.read()
    frame = cv2.flip(frame, 1)
    frame_shot = frame
    
    cv2.putText(frame, 'progress', (140, 25), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 255), thickness=2)
    cv2.putText(frame, 'hp: ' + str(hp), (500, 30), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 0), thickness=2)
    cv2.rectangle(frame, (140, 30), (500, 60), (255, 255, 255), thickness=2)
    # スクショがあるなら差分を出力
    if screenshot and interval == 0:
        # 背景差分のクラスを定義(リセット)
        fgbg = cv2.bgsegm.createBackgroundSubtractorMOG()
        # 背景画像を指定(スクショ)
        background = fgbg.apply(photo)
        # 差分画像(カメラの入力フレーム)
        fgmask = fgbg.apply(frame)
        
        mask_tfout = fgmask - img2
        cv2.imshow("flow1", mask_tfout)
        
        mask_tfin = np.abs(img2 - fgmask)
        cv2.imshow("debug", photo)
        cv2.imshow("flow2", mask_tfin)
        out_number = np.sum(mask_tfout)
        in_number = np.sum(mask_tfin)
        x = (out_number + in_number) / 255
        # 経過秒数のカウント
        frameRate += 1
    
        if int(frameRate) % cap.get(cv2.CAP_PROP_FPS) == 0:
            second -= 1
        putText(frame, str(int(second)), 0, 50)
        createOutline(img3, frame)
        #print(x/y)
    
        #判定
        if 1.5 >= x / (y):
            clearframe += 1
            print(clearframe)
            #cv2.rectangle(frame, (142,32), ())
            
            if clearframe > 90:
                
                print("clear")
                z = createrandom()
                img2 = files[z]
                img3 = files_2[z]
                y = np.sum(img2) / 255
                clearframe = 0
                second = 10
                hp += 10
                if hp > 100:
                    hp = 100
                interval = 90
                #print(z)
        elif 1.5 <= x / (y) and clearframe > 0:
            clearframe -= 1
        
        #timeout
        if second == 0:
            print("failure")
            z = createrandom()
            img2 = files[z]
            img3 = files_2[z]
            y = np.sum(img2) / 255
            clearframe = 0
            second = 10
            hp -= 30
            interval = 90
            
        #gameover
        if hp <= 0:
              screenshot = False
              gameover = True
              cv2.putText(frame, 'GAME OVER', (180, 240), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 0), thickness=2)
              cv2.putText(frame, 'restart:s quit :q', (180, 280), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 0), thickness=2)
        length = 140 + (500 - 140)*clearframe/90
        cv2.rectangle(frame, (140, 30), (int(length), 60), (255, 255, 255), thickness=-1)
        #cv2.putText(frame, 'hp: ' + str(hp), (500, 30), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 0), thickness=2)
    else:
        if gameover:
            cv2.putText(frame, 'GAME OVER', (180, 240), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 0), thickness=2)
            cv2.putText(frame, 'quit :q', (180, 280), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 0), thickness=2)
    #text = "{}{:.0f}{}".format(clearframe)
        elif interval != 0:
            interval -= 1
            cv2.putText(frame, str(int(interval / 30) + 1), (280, 240), cv2.FONT_HERSHEY_SIMPLEX, 3.0, (255, 255, 0), thickness=2)
        else:
            cv2.putText(frame, 'press s to start', (180, 240), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 0), thickness=2)
    #cv2.putText(frame, text, (150, 25), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 255), thickness=2)
    #frame = frame + cv2.resize(img3, dsize = (640, 480))
    
    if screenshot == True and interval == 0:
        frame = cv2.addWeighted(cv2.cvtColor(frame, cv2.COLOR_BGR2BGRA), 1.0, files_3[z], 0.4, 0)
        cv2.imshow("output",frame)
    else:
        cv2.imshow("output",frame)
        
    k = cv2.waitKey(1)
    if k == ord("q"):
        break
    # フレームを保存 (スクショ)
    elif k == ord("s"):
        ret, photo = cap.read()
        screenshot = True
        gameover = False
        hp = 100
    elif k == ord("r"):
        hp -= 30
        second = 10
        z = createrandom()
        img2 = files[z]
        img3 = files_2[z]
        y = np.sum(img2) / 255
        print(z)
        mask_tfout = 0
              
#ポーズ画像と比較

#一致したら次のポーズに映る
 
    
 
#終了


cap.release()
cv2.destroyAllWindows()
